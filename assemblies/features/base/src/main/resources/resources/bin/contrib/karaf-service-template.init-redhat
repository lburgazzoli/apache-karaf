#!/bin/sh
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# Karaf control script
#
# chkconfig: - 80 20
# description: Karaf startup script
# processname: ${KARAF_SERVICE_NAME}
# pidfile: ${KARAF_SERVICE_PIDFILE}
# config: ${KARAF_SERVICE_CONF}
#

# Source function library.
. /etc/init.d/functions

# Load Java configuration.
[ -r /etc/java/java.conf ] && . /etc/java/java.conf
export JAVA_HOME

if [ -r "${KARAF_SERVICE_CONF}" ]; then
    set -o allexport
    . "${KARAF_SERVICE_CONF}"
    set +o allexport
else
    echo "Error KARAF_SERVICE_CONF not defined"
    exit -1
fi

if [ -z "$STARTUP_WAIT" ]; then
    STARTUP_WAIT=30
fi

if [ -z "$SHUTDOWN_WAIT" ]; then
    SHUTDOWN_WAIT=30
fi

do_check_status() {
    status -p "$KARAF_SERVICE_PIDFILE" -l $(basename "$KARAF_LOCKFILE") $KARAF_SERVICE_NAME >/dev/null 2>&1
}

do_start() {
    echo -n "Starting $KARAF_SERVICE_NAME: "

    do_check_status
    status_start=$?

    if [ $status_start -eq 3 ]; then

        # Console log
        LOG_PATH=$(dirname "$KARAF_SERVICE_LOG")
        if [ ! -d "$LOG_PATH" ]; then
            mkdir -p "$LOG_PATH"

            chown $KARAF_SERVICE_USER:$KARAF_SERVICE_GROUP "$LOG_PATH"
            chown $KARAF_SERVICE_USER:$KARAF_SERVICE_GROUP "$KARAF_SERVICE_LOG"
        fi
        
        if [ ! -z "$KARAF_SERVICE_USER" ]; then
            if [ -r /etc/rc.d/init.d/functions ]; then
                daemon \
                    --user="$KARAF_SERVICE_USER" \
                    --pidfile="$KARAF_SERVICE_PIDFILE" \
                    " \"$KARAF_SERVICE_PATH/bin/$KARAF_SERVICE_START_COMMAND\" "
            else
                su - $KARAF_SERVICE_USER \
                    -c " \"$KARAF_SERVICE_PATH/bin/$KARAF_SERVICE_START_COMMAND\" "
            fi
            
            let count=0
            let kwait=$STARTUP_WAIT

            # Waith untill the process has been started, max STARTUP_WAIT seconds
            while [ $count -lt $kwait ]; do
                do_check_status
                status_start=$?

                if [ $status_start -eq 3 ]; then
                    sleep 1
                    let count=$count+1;
                elif [ $status_start -eq 0 ]; then
                    success
                    echo
                    touch "$KARAF_LOCKFILE"
                    exit 0
                fi
            done

            do_check_status
            status_start=$?

            if [ $status_start -eq 0 ]; then
                warning
                echo
                echo "$KARAF_SERVICE_NAME hasn't started within the timeout allowed."
                touch "$KARAF_LOCKFILE"
                exit 0
            else
                failure
                echo
                echo "$KARAF_SERVICE_NAME failed to start within the timeout allowed."
                exit 1
            fi
        fi
    else
        $0 status
    fi
}

do_stop() {
    echo -n "Stopping $KARAF_SERVICE_NAME: "

    do_check_status
    status_stop=$?

    if [ $status_stop -eq 0 ]; then
        read kpid < "$KARAF_SERVICE_PIDFILE"

        let count=0
        let kwait=$SHUTDOWN_WAIT

        # Try stopping vit provided command
        su - $KARAF_SERVICE_USER \
            -c "export JAVA_HOME=$JAVA_HOME; \"$KARAF_SERVICE_PATH/bin/$KARAF_SERVICE_STOP_COMMAND\" " \
        > /dev/null 2>&1

        until [ $status_stop -eq 0 ] && [ $count -gt $kwait ]; do
            do_check_status
            status_stop=$?

            if [ $status_stop -eq 0 ]; then
                sleep 1
                let count=$count+1;
            else
                break
            fi
        done

        do_check_status
        status_stop=$?

        if [ $status_stop -eq 0 ]; then
            kill -9 $kpid
        fi
        success
    elif [ $status_stop -eq 1 ]; then
        echo
        echo -n "$KARAF_SERVICE_NAME dead but pid file exists, cleaning up"
    elif [ $status_stop -eq 2 ]; then
        echo
        echo -n "$KARAF_SERVICE_NAME dead but subsys locked, cleaning up"
    elif [ $status_stop -eq 3 ]; then
        echo
        echo -n $"$KARAF_SERVICE_NAME is already stopped"
    fi

    rm -f "$KARAF_SERVICE_PIDFILE"
    rm -f "$KARAF_LOCKFILE"

    echo
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    restart)
        $0 do_stop
        $0 do_start
        ;;
    status)
        status -p "$KARAF_SERVICE_PIDFILE" -l $(basename "$KARAF_LOCKFILE") "$KARAF_SERVICE_NAME"
        ;;
    *)
        ## If no parameters are given, print which are avaiable.
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac
